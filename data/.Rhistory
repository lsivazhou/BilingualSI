summary(m.1a)$AICtab
summary(m.1b)$AICtab
m = lmer(RT ~ Length * Frequency + (1|Subject) + (1|Word), data=lexdec, REML=F)
summary(m)
vif.mer(m)
pairscor.fnc(lexdec[,c("RT","Length","Frequency")])
lexdec = lexdec %>%
mutate(cLength = Length - mean(Length),
cFrequency = Frequency - mean(Frequency))
summary(lexdec)
m = lmer(RT ~ cLength * cFrequency + (1|Subject) + (1|Word), data=lexdec, REML=F)
summary(m)
vif.mer(m)
m = lmer(RT ~ cLength * cFrequency + (1|Subject) + (1|Word), data=lexdec, REML=F)
summary(m)
vif.mer(m)
library(tidyverse)
library(brms)
this.dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(this.dir)
source("helpers.R")
cbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
theme_set(theme_bw())
# load the dataset collected by Degen (2015)
d <- read_tsv("https://raw.githubusercontent.com/thegricean/corpus_some/master/data/some_database.csv") %>%
mutate_if(is.character,as.factor)
view(d)
nrow(d) #13630 rows
# Load datasets. R will automatically read the contents of these files into tibbles (which are tidyverse versions of data.frames).
wide = read_csv("../data/lexdec_wide.csv")
head(wide)
wordinfo = read_csv("../data/wordinfo.csv")
head(wordinfo)
View(wordinfo)
View(wide)
library(tidyverse)
library(lme4)
# Load dataset
raw_data = read.csv(/Users/sivazhou/Desktop/BilingualPragmaticProcessing/BilingualSI/data/Pilot/bilingpilot_official-merged.csv)
# Load dataset
raw_data = read.csv("Users/sivazhou/Desktop/BilingualPragmaticProcessing/BilingualSI/data/Pilot/bilingpilot_official-merged.csv")
# Load dataset
raw_data = read.csv("/Users/sivazhou/Desktop/BilingualPragmaticProcessing/BilingualSI/data/Pilot/bilingpilot_official-merged.csv")
?dirname
# Set working directory to directory of script
this.dir <- dirname(/Users/sivazhou/Desktop/BilingualPragmaticProcessing/BilingualSI/data/Pilot)
# Set working directory to directory of script
this.dir <- dirname("/Users/sivazhou/Desktop/BilingualPragmaticProcessing/BilingualSI/data/Pilot")
?setwd
setwd(this.dir)
# Load dataset
raw_data = read.csv("/Users/sivazhou/Desktop/BilingualPragmaticProcessing/BilingualSI/data/Pilot/bilingpilot_official-merged.csv")
# Load dataset
raw_data = read.csv("bilingpilot_official-merged.csv")
# Load dataset
raw_data = read.csv("Pilot/bilingpilot_official-merged.csv")
# Set working directory to directory of script
this.dir <- dirname("/Users/sivazhou/Desktop/BilingualPragmaticProcessing/BilingualSI/data/Pilotdata")
setwd(this.dir)
# Load dataset
raw_data = read.csv("Pilotdata/bilingpilot_official-merged.csv")
head(raw_data)
View(raw_data)
wordinfo = read_csv("../data/wordinfo.csv")
head(wordinfo)
head(wd)
# Remove unnecessary columns
clean_data <- c("workerid", "proliferate.condition", "correct", "response", "result", "rt", "stimulus")
df = subset(raw_data, c("workerid", "proliferate.condition", "correct", "response", "result", "rt", "stimulus") )
df = subset(raw_data, select = c("workerid", "proliferate.condition", "correct", "response", "result", "rt", "stimulus") )
View(df)
View(long)
gather?
?gather
?gather
df_critical_trials = df %>%
gather(workerid,proliferate.condition,correct,response,result,rt,stimulus) %>%
arrange(stimulus)
df_critical_trials = df %>%
gather(workerid,proliferate.condition,correct,response,result,rt,stimulus) %>%
arrange(stimulus)
long = wide %>%
gather(Word,RT,-Subject,-Sex,-NativeLanguage) %>%
arrange(Subject)
df_critical_trials = df %>%
gather(workerid,proliferate.condition,-correct,-response,result,rt,stimulus) %>%
arrange(stimulus)
df_critical_trials = df %>%
gather(stimulus,proliferate.condition,-workerid,-correct,-response,result,rt) %>%
arrange(stimulus)
View(df_critical_trials)
long = wide %>%
gather(Word,RT,-Subject,-Sex,-NativeLanguage) %>%
arrange(Word)
View(long)
df_critical_trials = df %>%
gather(stimulus,rt, -proliferate.condition,-workerid,-correct,-response,-result) %>%
arrange(stimulus)
View(df_critical_trials)
long = wide %>%
gather(Word,RT,-Subject,-Sex,-NativeLanguage) %>%
arrange(Word)
View(long)
df_critical_trials = df %>%
gather(stimulus,rt) %>%
arrange(stimulus)
View(df_critical_trials)
# Remove irrelevant trials
df_critical_trials = df[order(df$stimulus)]
# Remove unnecessary columns
df = subset(raw_data, select = c("workerid", "proliferate.condition", "correct", "response", "result", "rt", "stimulus") )
# Remove irrelevant trials
df_critical_trials = df[order(df$stimulus)]
# Remove irrelevant trials
df_critical_trials = df[order(df$stimulus),]
View(df_critical_trials)
# Remove irrelevant trials
df_critical_trials = df[order(df$stimulus),]
View(df_critical_trials)
View(df_critical_trials)
df_critical_trials = subset(df, df$stimulus == "audio/yixie-critical.wav" & df$stimulus == "audio/youxie-critical.wav" & df$stimulus == "audio/some-critical.wav" & df$stimulus == "audio/summa-critical.wav" &)
df_critical_trials = subset(df, df$stimulus == "audio/yixie-critical.wav" & df$stimulus == "audio/youxie-critical.wav" & df$stimulus == "audio/some-critical.wav" & df$stimulus == "audio/summa-critical.wav")
View(df_critical_trials)
df_critical_trials = subset(df, df$stimulus == "audio/yixie-critical.wav" or df$stimulus == "audio/youxie-critical.wav" or df$stimulus == "audio/some-critical.wav" or df$stimulus == "audio/summa-critical.wav")
df_critical_trials = subset(df, df$stimulus = "audio/yixie-critical.wav" | df$stimulus == "audio/youxie-critical.wav" | df$stimulus == "audio/some-critical.wav" | df$stimulus == "audio/summa-critical.wav")
df_critical_trials = subset(df, df$stimulus == "audio/yixie-critical.wav" | df$stimulus == "audio/youxie-critical.wav" | df$stimulus == "audio/some-critical.wav" | df$stimulus == "audio/summa-critical.wav")
View(df_critical_trials)
df__trials = subset(df, df$stimulus != "*.wav")
View(df__trials)
df_trials = subset(df, df$stimulus != "*.wav")
View(df_trials)
df_trials = subset(df, df$stimulus == "*.wav")
View(df_trials)
df_trials <- df[grep(".wav", df$stimulus), ]
View(df_trials)
df_trials <- df[df$stimulus != "audio/kaching.wav", ]
View(df_trials)
# Remove non-trial rows while keeping all trial information (for attention check purposes)
df_trials <- df[grep(".wav", df$stimulus), ]
df_trials <- df[df$stimulus != "audio/kaching.wav", ]
View(df_trials)
# Remove non-trial rows while keeping all trial information (for attention check purposes)
df_trials <- df[grep(".wav", df$stimulus), ]
View(df_trials)
# Remove non-trial rows while keeping all trial information (for attention check purposes)
df_trials <- df[grep(".wav", df$stimulus), ]
View(df__trials)
# Remove non-trial rows while keeping all trial information (for attention check purposes)
df_trials <- df[grep(".wav", df$stimulus), ]
View(df_trials)
# Remove non-trial rows while keeping all trial information (for attention check purposes)
df_trials_with_kaching <- df[grep(".wav", df$stimulus), ]
df_trials <- df_trials[df_trials$stimulus != "audio/kaching.wav", ]
View(df_trials)
# Keeping only non-critical trials
df_noncritical_trials <- df_trials[!grepl("critical\\.wav$", df$stimulus), ]
View(df_noncritical_trials)
# Keeping only non-critical trials
df_noncritical_trials <- df_trials[!grepl("critical\\.wav$", df$stimulus), ]
View(df_noncritical_trials)
# Keeping only non-critical trials
df_noncritical_trials <- df_trials[!grep("critical\\.wav$", df$stimulus), ]
View(df_noncritical_trials)
# Keeping only non-critical trials
df_noncritical_trials <- df_trials[!grepl("critical\\.wav$", df$stimulus), ]
View(df_noncritical_trials)
# Keeping only non-critical trials
df_noncritical_trials <- df_trials[!grep("critical.wav$", df$stimulus), ]
View(df_noncritical_trials)
# Keeping only non-critical trials
df_noncritical_trials <- df_trials[!grepl("critical.wav$", df$stimulus), ]
View(df_noncritical_trials)
# Keeping only non-critical trials
df_noncritical_trials <- df_trials[!grep("critical.wav", df$stimulus), ]
View(df_noncritical_trials)
# Keeping only non-critical trials
df_noncritical_trials <- df_trials[!grep("critical\\.wav$", df$stimulus), ]
View(df_noncritical_trials)
# Keeping only non-critical trials
df_noncritical_trials <- df_trials[!grepl("critical\\.wav$", df$stimulus), ]
View(df_noncritical_trials)
# Keeping only non-critical trials
df_noncritical_trials <- df_trials[!grepl("critical\\.wav$", df$stimulus), ]
View(df_noncritical_trials)
#Load necessary packages
library(tidyverse)
library(lme4)
# Set working directory to directory of script
this.dir <- dirname("/Users/sivazhou/Desktop/BilingualPragmaticProcessing/BilingualSI/data/Pilotdata")
setwd(this.dir)
# Load dataset
raw_data = read.csv("Pilotdata/bilingpilot_official-merged.csv")
# Remove unnecessary columns
df = subset(raw_data, select = c("workerid", "proliferate.condition", "correct", "response", "result", "rt", "stimulus") )
# Remove non-trial rows while keeping all trial information
df_trials <- df[grep(".wav", df$stimulus), ]
df_trials <- df_trials[df_trials$stimulus != "audio/kaching.wav", ]
View(df_trials)
# Keeping only non-critical trials
df_noncritical_trials <- df_trials[!grepl("critical\\.wav$", df$stimulus), ]
View(df_noncritical_trials)
# Keeping only critical trials
df_critical_trials = subset(df, df$stimulus == "audio/yixie-critical.wav" | df$stimulus == "audio/youxie-critical.wav" | df$stimulus == "audio/some-critical.wav" | df$stimulus == "audio/summa-critical.wav")
View(df_critical_trials)
df_noncritical_trials <- df_trials[!endsWith(df$stimulus, "critical.wav"), ]
View(df_noncritical_trials)
df_noncritical_trials <- df_trials[!endsWith(df$stimulus, "critical.wav"), ]
View(df_noncritical_trials)
# Keeping only non-critical trials
df_noncritical_trials <- df_trials[!grepl("critical.wav$", df$stimulus), ]
View(df_noncritical_trials)
# Keeping only non-critical trials
df_noncritical_trials <- df_trials[!grep("critical.wav$", df$stimulus), ]
View(df_noncritical_trials)
# Keeping only non-critical trials
df_noncritical_trials <- df_trials[!grep("critical\\.wav$", df$stimulus), ]
View(df_noncritical_trials)
# Keeping only non-critical trials
df_noncritical_trials <- df_trials[!grep("critical.wav", df$stimulus), ]
View(df_noncritical_trials)
# Keeping only non-critical trials
df_noncritical_trials <- df_trials[!grep("*critical.wav", df$stimulus), ]
View(df_noncritical_trials)
# Keeping only non-critical trials
df_noncritical_trials <- df_trials[grep("critical.wav", df$stimulus), ]
View(df_noncritical_trials)
# Keeping only non-critical trials
df_noncritical_trials <- df_trials[grep("critical.wav", df$stimulus), ]
View(df_noncritical_trials)
df_noncritical_trials <- subset(df_trials, !endsWith(stimulus, "critical.wav"))
View(df_noncritical_trials)
#Load necessary packages
library(tidyverse)
library(lme4)
# Set working directory to directory of script
this.dir <- dirname("/Users/sivazhou/Desktop/BilingualPragmaticProcessing/BilingualSI/data/Pilotdata")
setwd(this.dir)
# Load dataset
raw_data = read.csv("Pilotdata/bilingpilot_official-merged.csv")
# Remove unnecessary columns
df = subset(raw_data, select = c("workerid", "proliferate.condition", "correct", "response", "result", "rt", "stimulus") )
# Remove non-trial rows while keeping all trial information
df_trials <- df[grep(".wav", df$stimulus), ]
df_trials <- df_trials[df_trials$stimulus != "audio/kaching.wav", ]
View(df_trials)
# Keeping only non-critical trials (for attention check/exclusion purposes)
df_noncritical_trials <- subset(df_trials, !endsWith(stimulus, "critical.wav"))
View(df_noncritical_trials)
# Keeping only critical trials
df_critical_trials = subset(df, df$stimulus == "audio/yixie-critical.wav" | df$stimulus == "audio/youxie-critical.wav" | df$stimulus == "audio/some-critical.wav" | df$stimulus == "audio/summa-critical.wav")
View(df_critical_trials)
# Remove tutorial trials
df_critical_trials <- df_noncritical_trials[df_noncritical_trials$result != "", ]
View(df_noncritical_trials)
# Remove tutorial trials
df_noncritical_trials <- df_noncritical_trials[df_noncritical_trials$result != "", ]
View(df_noncritical_trials)
#Load necessary packages
library(tidyverse)
library(lme4)
# Set working directory to directory of script
this.dir <- dirname("/Users/sivazhou/Desktop/BilingualPragmaticProcessing/BilingualSI/data/Pilotdata")
setwd(this.dir)
# Load dataset
raw_data = read.csv("Pilotdata/bilingpilot_official-merged.csv")
# Remove unnecessary columns
df = subset(raw_data, select = c("workerid", "proliferate.condition", "correct", "response", "result", "rt", "stimulus") )
# Remove non-trial rows while keeping all trial information
df_trials <- df[grep(".wav", df$stimulus), ]
df_trials <- df_trials[df_trials$stimulus != "audio/kaching.wav", ]
View(df_trials)
# Keeping only non-critical trials (for attention check/exclusion purposes)
df_noncritical_trials <- subset(df_trials, !endsWith(stimulus, "critical.wav"))
# Remove tutorial trials
df_noncritical_trials <- df_noncritical_trials[df_noncritical_trials$result != "", ]
View(df_noncritical_trials)
# Keeping only critical trials
df_critical_trials = subset(df, df$stimulus == "audio/yixie-critical.wav" | df$stimulus == "audio/youxie-critical.wav" | df$stimulus == "audio/some-critical.wav" | df$stimulus == "audio/summa-critical.wav")
View(df_critical_trials)
# Keeping only practice trials (for attention check/exclusion purposes)
df_practice_trials <-df_noncritical_trials[df_noncritical_trials$correct ="",]
# Keeping only practice trials (for attention check/exclusion purposes)
df_practice_trials <-df_noncritical_trials[df_noncritical_trials$correct == "",]
View(df_practice_trials)
# Remove practice trials
df_noncritical_trials <- df_noncritical_trials[df_noncritical_trials$correct != "", ]
View(df_noncritical_trials)
result_counts <- table(df_noncritical_trials$workerid, df_noncritical_trials$result)
View(result_counts)
?spread
this.dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(this.dir)
#Load necessary packages
library(tidyverse)
library(lme4)
wide = read_csv("../data/lexdec_wide.csv")
head(wide)
wordinfo = read_csv("../data/wordinfo.csv")
head(wordinfo)
wd = read_delim("../data/wordinfo.csv",delim=",")
head(wd)
View(wide)
long = wide %>%
gather(Word,RT,-Subject,-Sex,-NativeLanguage) %>%
arrange(Subject)
View(long)
View(result_counts)
result_counts <- prop.table(df_noncritical_trials$workerid, df_noncritical_trials$result)
View(result_counts)
-
result_counts <- prop.table(df_noncritical_trials$workerid, df_noncritical_trials$result)
result_counts <- table(df_noncritical_trials$workerid, df_noncritical_trials$result)
View(result_counts)
table_data <- table(result_counts$result)
table_data <- table(result_counts$Freq)
View(df_practice_trials)
# Remove participant data by exclusion criteria
df_critical_trials <- df_critical_trials[df_critical_trials$workerid = 105 | 107 | 109 | 112 | 121, ]
# Remove participant data by exclusion criteria
df_critical_trials <- df_critical_trials[df_critical_trials$workerid == 105 | 107 | 109 | 112 | 121, ]
View(df_critical_trials)
# Remove participant data by exclusion criteria
df_critical_trials <- df_critical_trials[df_critical_trials$workerid == 105, ]
View(df_critical_trials)
# Remove participant data by exclusion criteria
df_critical_trials <- df_critical_trials[df_critical_trials$workerid != 105 | 107, ]
View(df_critical_trials)
# Remove participant data by exclusion criteria
df_critical_trials <- df_critical_trials[df_critical_trials$workerid != 105, ]
View(df_critical_trials)
# Remove participant data by exclusion criteria
df_critical_trials <- df_critical_trials[df_critical_trials$workerid == 105, ]
View(df_critical_trials)
# Keeping only critical trials
df_critical_trials = subset(df, df$stimulus == "audio/yixie-critical.wav" | df$stimulus == "audio/youxie-critical.wav" | df$stimulus == "audio/some-critical.wav" | df$stimulus == "audio/summa-critical.wav")
# Remove participant data by exclusion criteria
df_critical_trials <- df_critical_trials[df_critical_trials$workerid == 105, ]
View(df_critical_trials)
# Keeping only critical trials
df_critical_trials = subset(df, df$stimulus == "audio/yixie-critical.wav" | df$stimulus == "audio/youxie-critical.wav" | df$stimulus == "audio/some-critical.wav" | df$stimulus == "audio/summa-critical.wav")
# Remove participant data by exclusion criteria
df_critical_trials <- df_critical_trials[df_critical_trials$workerid != "105", ]
View(df_critical_trials)
# Remove participant data by exclusion criteria
df_critical_trials <- df_critical_trials[df_critical_trials$workerid %in% c(105, 107, 109, 112, 121), ]
# Keeping only critical trials
df_critical_trials = subset(df, df$stimulus == "audio/yixie-critical.wav" | df$stimulus == "audio/youxie-critical.wav" | df$stimulus == "audio/some-critical.wav" | df$stimulus == "audio/summa-critical.wav")
# Remove participant data by exclusion criteria
df_critical_trials <- df_critical_trials[df_critical_trials$workerid %in% c(105, 107, 109, 112, 121), ]
View(df_critical_trials)
# Keeping only critical trials
df_critical_trials = subset(df, df$stimulus == "audio/yixie-critical.wav" | df$stimulus == "audio/youxie-critical.wav" | df$stimulus == "audio/some-critical.wav" | df$stimulus == "audio/summa-critical.wav")
# Remove participant data by exclusion criteria
df_critical_trials <- df_critical_trials[!(df_critical_trials$workerid %in% c(105, 107, 109, 112, 121)), ]
View(df_critical_trials)
#Load necessary packages
library(tidyverse)
library(lme4)
# Set working directory to directory of script
this.dir <- dirname("/Users/sivazhou/Desktop/BilingualPragmaticProcessing/BilingualSI/data/Pilotdata")
setwd(this.dir)
# Load dataset
raw_data = read.csv("Pilotdata/bilingpilot_official-merged.csv")
# Remove unnecessary columns
df = subset(raw_data, select = c("workerid", "proliferate.condition", "correct", "response", "result", "rt", "stimulus") )
# Remove non-trial rows while keeping all trial information
df_trials <- df[grep(".wav", df$stimulus), ]
df_trials <- df_trials[df_trials$stimulus != "audio/kaching.wav", ]
View(df_trials)
# Keeping only non-critical trials (for attention check/exclusion purposes)
df_noncritical_trials <- subset(df_trials, !endsWith(stimulus, "critical.wav"))
# Remove tutorial trials
df_noncritical_trials <- df_noncritical_trials[df_noncritical_trials$result != "", ]
# Remove practice trials
df_noncritical_trials <- df_noncritical_trials[df_noncritical_trials$correct != "", ]
View(df_noncritical_trials)
result_counts <- table(df_noncritical_trials$workerid, df_noncritical_trials$result)
View(result_counts)
## To exclude participant 107 (didn't do the trials)
## To exclude participant 105, 109, 112 and 121 (answered almost everything "perfectly wrong." Don't know why since they completed practice trails just fine. Three in English_Mandarin_some, one in English_Mandarin_summa)
# Keeping only practice trials (for attention check/exclusion purposes)
df_practice_trials <-df_noncritical_trials[df_noncritical_trials$correct == "",]
View(df_practice_trials)
## To exclude participant 107 (didn't do practice trials)
# Keeping only critical trials
df_critical_trials = subset(df, df$stimulus == "audio/yixie-critical.wav" | df$stimulus == "audio/youxie-critical.wav" | df$stimulus == "audio/some-critical.wav" | df$stimulus == "audio/summa-critical.wav")
# Remove participant data by exclusion criteria
df_critical_trials_analysis <- df_critical_trials[!(df_critical_trials$workerid %in% c(105, 107, 109, 112, 121)), ]
View(df_critical_trials_analysis)
# Remove participant data by exclusion criteria
df_critical_trials <- df_critical_trials[!(df_critical_trials$workerid %in% c(105, 107, 109, 112, 121)), ]
View(df_critical_trials)
# Remove critical trials where no response is given
df_critical_trials_analysis <- df_critical_trials[df_critical_trials$response != "",]
View(df_critical_trials_analysis)
#Load necessary packages
library(tidyverse)
library(lme4)
# Set working directory to directory of script
this.dir <- dirname("/Users/sivazhou/Desktop/BilingualPragmaticProcessing/BilingualSI/data/Pilotdata")
setwd(this.dir)
# Load dataset
raw_data = read.csv("Pilotdata/bilingpilot_official-merged.csv")
# Remove unnecessary columns
df = subset(raw_data, select = c("workerid", "proliferate.condition", "correct", "response", "result", "rt", "stimulus") )
# Remove non-trial rows while keeping all trial information
df_trials <- df[grep(".wav", df$stimulus), ]
df_trials <- df_trials[df_trials$stimulus != "audio/kaching.wav", ]
View(df_trials)
# Keeping only non-critical trials (for attention check/exclusion purposes)
df_noncritical_trials <- subset(df_trials, !endsWith(stimulus, "critical.wav"))
# Remove tutorial trials
df_noncritical_trials <- df_noncritical_trials[df_noncritical_trials$result != "", ]
# Remove practice trials
df_noncritical_trials <- df_noncritical_trials[df_noncritical_trials$correct != "", ]
View(df_noncritical_trials)
result_counts <- table(df_noncritical_trials$workerid, df_noncritical_trials$result)
View(result_counts)
## To exclude participant 107 (didn't do the trials)
## To exclude participant 105, 109, 112 and 121 (answered almost everything "perfectly wrong." Don't know why since they completed practice trails just fine. Three in English_Mandarin_some, one in English_Mandarin_summa)
# Keeping only practice trials (for attention check/exclusion purposes)
df_practice_trials <-df_noncritical_trials[df_noncritical_trials$correct == "",]
View(df_practice_trials)
## To exclude participant 107 (didn't do practice trials)
# Keeping only critical trials
df_critical_trials = subset(df, df$stimulus == "audio/yixie-critical.wav" | df$stimulus == "audio/youxie-critical.wav" | df$stimulus == "audio/some-critical.wav" | df$stimulus == "audio/summa-critical.wav")
# Remove participant data by exclusion criteria
df_critical_trials <- df_critical_trials[!(df_critical_trials$workerid %in% c(105, 107, 109, 112, 121)), ]
View(df_critical_trials)
# Remove critical trials where no response is given -- clean data for analysis
df_critical_trials_analysis <- df_critical_trials[df_critical_trials$response != "",]
View(df_critical_trials_analysis)
View(df_practice_trials)
# Keeping only practice trials (for attention check/exclusion purposes)
df_practice_trials <-df_noncritical_trials[df_noncritical_trials$correct == "",]
View(df_practice_trials)
result_counts <- table(df_noncritical_trials$workerid, df_noncritical_trials$result)
View(result_counts)
# Keeping only practice trials (for attention check/exclusion purposes)
df_practice_trials <-df_noncritical_trials[df_noncritical_trials$correct == "",]
View(df_practice_trials)
View(df_noncritical_trials)
# Remove practice trials
df_noncritical_trials_withoutpractice <- df_noncritical_trials[df_noncritical_trials$correct != "", ]
View(df_noncritical_trials_withoutpractice)
# Keeping only non-critical trials (for attention check/exclusion purposes)
df_noncritical_trials <- subset(df_trials, !endsWith(stimulus, "critical.wav"))
# Remove tutorial trials
df_noncritical_trials <- df_noncritical_trials[df_noncritical_trials$result != "", ]
# Remove practice trials
df_noncritical_trials_withoutpractice <- df_noncritical_trials[df_noncritical_trials$correct != "", ]
View(df_noncritical_trials_withoutpractice)
result_counts <- table(df_noncritical_trials$workerid, df_noncritical_trials$result)
View(result_counts)
# Keeping only practice trials (for attention check/exclusion purposes)
df_practice_trials <-df_noncritical_trials[df_noncritical_trials$correct == "",]
View(df_practice_trials)
# Keeping only critical trials
df_critical_trials = subset(df, df$stimulus == "audio/yixie-critical.wav" | df$stimulus == "audio/youxie-critical.wav" | df$stimulus == "audio/some-critical.wav" | df$stimulus == "audio/summa-critical.wav")
# Remove participant data by exclusion criteria
df_critical_trials <- df_critical_trials[!(df_critical_trials$workerid %in% c(105, 107, 109, 112, 121)), ]
View(df_critical_trials)
# Remove critical trials where no response is given -- clean data for analysis
df_critical_trials_analysis <- df_critical_trials[df_critical_trials$response != "",]
View(df_critical_trials_analysis)
result_counts <- table(df_noncritical_trials_withoutpractice$workerid, df_noncritical_trials_withoutpractice$result)
View(result_counts)
#Load necessary packages
library(tidyverse)
library(lme4)
# Set working directory to directory of script
this.dir <- dirname("/Users/sivazhou/Desktop/BilingualPragmaticProcessing/BilingualSI/data/Pilotdata")
setwd(this.dir)
# Load dataset
raw_data = read.csv("Pilotdata/bilingpilot_official-merged.csv")
# Remove unnecessary columns
df = subset(raw_data, select = c("workerid", "proliferate.condition", "correct", "response", "result", "rt", "stimulus") )
# Remove non-trial rows while keeping all trial information
df_trials <- df[grep(".wav", df$stimulus), ]
df_trials <- df_trials[df_trials$stimulus != "audio/kaching.wav", ]
View(df_trials)
# Keeping only non-critical trials (for attention check/exclusion purposes)
df_noncritical_trials <- subset(df_trials, !endsWith(stimulus, "critical.wav"))
# Remove tutorial trials
df_noncritical_trials <- df_noncritical_trials[df_noncritical_trials$result != "", ]
# Remove practice trials
df_noncritical_trials_withoutpractice <- df_noncritical_trials[df_noncritical_trials$correct != "", ]
View(df_noncritical_trials_withoutpractice)
result_counts <- table(df_noncritical_trials_withoutpractice$workerid, df_noncritical_trials_withoutpractice$result)
View(result_counts)
## To exclude participant 107 (didn't do the trials)
## To exclude participant 105, 109, 112 and 121 (answered almost everything "perfectly wrong." Don't know why since they completed practice trails just fine. Three in English_Mandarin_some, one in English_Mandarin_summa)
# Keeping only practice trials (for attention check/exclusion purposes)
df_practice_trials <-df_noncritical_trials[df_noncritical_trials$correct == "",]
View(df_practice_trials)
## To exclude participant 107 (didn't do practice trials)
# Keeping only critical trials
df_critical_trials = subset(df, df$stimulus == "audio/yixie-critical.wav" | df$stimulus == "audio/youxie-critical.wav" | df$stimulus == "audio/some-critical.wav" | df$stimulus == "audio/summa-critical.wav")
# Remove participant data by exclusion criteria
df_critical_trials <- df_critical_trials[!(df_critical_trials$workerid %in% c(105, 107, 109, 112, 121)), ]
View(df_critical_trials)
# Remove critical trials where no response is given -- clean data for analysis
df_critical_trials_analysis <- df_critical_trials[df_critical_trials$response != "",]
View(df_critical_trials_analysis)
write_csv(df_critical_trials_analysis)
write_csv(df_critical_trials_analysis,"data_for_analysis.csv")
write_csv(df_critical_trials,"data_before_exclusion.csv")
write_csv(df_practice_trials,"practice_trial_data.csv")
write_csv(df_practice_trials,"practice_trials_data.csv")
write_csv(df_noncritical_trials_withoutpractice,"noncritical_trials_data.csv")
write_csv(df_critical_trials_analysis,"critical_data_for_analysis.csv")
write_csv(df_critical_trials,"critical_data_before_exclusion.csv")
